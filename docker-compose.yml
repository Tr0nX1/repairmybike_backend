version: '3'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    env_file: .env
    volumes:
      - .:/app
    command: /bin/bash -c "python manage.py migrate && python manage.py collectstatic --no-input && python manage.py runserver 0.0.0.0:8000"
    networks:
      - repairmybike-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.repairmybike.local`)"

  kong-database:
    image: postgres:13
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kongpass
    volumes:
      - kong_data:/var/lib/postgresql/data
    networks:
      - repairmybike-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration-bootstrap:
    image: kong:latest
    command: kong migrations bootstrap
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kongpass
    networks:
      - repairmybike-network
    depends_on:
      kong-database:
        condition: service_healthy
    restart: on-failure

  kong-migration-up:
    image: kong:latest
    command: kong migrations up && kong migrations finish
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kongpass
    networks:
      - repairmybike-network
    depends_on:
      - kong-migration-bootstrap
    restart: on-failure

  kong:
    image: kong:latest
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kongpass
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_LISTEN=0.0.0.0:8000
    ports:
      - "8001:8001" # Admin API
      - "8443:8443" # Proxy HTTPS
      - "8444:8444" # Admin API HTTPS
    networks:
      - repairmybike-network
    depends_on:
      - kong-migration-up
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

networks:
  repairmybike-network:
    driver: bridge

volumes:
  kong_data: